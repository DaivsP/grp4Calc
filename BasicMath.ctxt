#BlueJ class context
comment0.target=BasicMath
comment0.text=\n\ Write\ a\ description\ of\ class\ BasicMath\ here.\n\n\ @author\ (your\ name)\n\ @version\ (a\ version\ number\ or\ a\ date)\n
comment1.params=
comment1.target=BasicMath()
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ BasicMath\n
comment10.params=input1
comment10.target=double\ reverseAnswer(double)
comment11.params=
comment11.target=void\ run()
comment11.text=\ Below\ I\ created\ a\ method\ that\ the\ Calculator\ class\ will\ call\ in\ it's\ main\ loop.\n\ It\ accesses\ the\ Display\ class\ by\ creating\ a\ new\ Display()\ in\ the\ first\ line.\n\ \n\ Then\ it\ prints\ out\ the\ name\ of\ the\ calc,\ blah\ blah\n\ The\ operator\ string\ is\ then\ initated\ as\ nothing\ because\ it\ will\ change\n\ \n\ Next,\ I\ created\ the\ main\ loop\ THIS\ basic\ math\ calc\ will\ run\ when\ accesed\ through\ the\ Calculator\ class.\n\ \n\ first\ the\ calc\ will\ resent\ any\ previously\ stored\ answer\ \n\ Then\ it\ will\ ask\ the\ user\ for\ a\ operator\ input\ so\ it\ knows\ which\ math\ method\ to\ use\n\ \n\ the\ switch\ below\ it\ cycles\ through\ all\ the\ operators,\ finding\ which\ one\ the\ user\ enetered\ and\ performs\ \n\ proper\ method\n\ \n\ The\ default\ case\ for\ this\ switch\ will\ ask\ the\ user\ to\ input\ a\ valid\ operator\ if\ they\ type\ in\ anything\ that\ isn't\n\ something\ the\ switch\ is\ looking\ for\n\ \n\ Once\ the\ math\ is\ done\ it\ will\ output\ the\ answer\ nd\ ask\ the\ user\ to\ type\ menu\ if\ they\ wish\ to\ return\ back\ to\ main\ menu\n\ \n\ If\ they\ type\ menu,\ the\ while\ loop\ is\ broken\ and\ the\ method\ will\ terminate\ allowing\ the\ program\ to\ return\ back\ to\n\ the\ start\ of\ the\ main\ Calculator\ method\n
comment2.params=input1\ input2
comment2.target=double\ add(double,\ double)
comment2.text=\n\ An\ example\ of\ a\ method\ -\ replace\ this\ comment\ with\ your\ own\n\n\ @param\ \ y\ \ a\ sample\ parameter\ for\ a\ method\n\ @return\ \ \ \ the\ sum\ of\ x\ and\ y\n
comment3.params=input1\ input2
comment3.target=double\ subtract(double,\ double)
comment4.params=input1\ input2
comment4.target=double\ multiply(double,\ double)
comment5.params=input1\ input2
comment5.target=double\ divide(double,\ double)
comment6.params=input1
comment6.target=double\ square(double)
comment7.params=input1
comment7.target=double\ squareRoot(double)
comment8.params=input1\ input2
comment8.target=double\ exponent(double,\ double)
comment9.params=input1
comment9.target=double\ inverse(double)
numComments=12
